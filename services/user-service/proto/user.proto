syntax = "proto3";

package user;

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "internal/delivery/grpc/pb";

service UserService {
  rpc Register(RegisterRequest) returns (AuthResponse);
  rpc Login(AuthRequest) returns (AuthResponse);
  rpc GetClaimsFromToken(Empty) returns (ClaimsResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (AuthResponse);
  rpc GetMyProfile(Empty) returns (UserResponse);
  rpc GetUserProfile(GetUserProfileRequest) returns (UserResponse);
  rpc UpdateProfile(UpdateProfileRequest) returns (UserResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (Empty);
  rpc DeleteMe(Empty) returns (Empty);
  rpc RecoverAccount(AuthRequest) returns (AuthResponse);
}

// Requests

message RegisterRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string email = 2 [(validate.rules).string = {email: true}];
  string password = 3 [
    (validate.rules).string = {
      min_len: 6,
      max_len: 100,
      pattern: "^[a-zA-Z0-9!@#\\$%\\^&\\*\\(\\)_\\+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+$"
    }
  ];
}

message AuthRequest {
  string email = 1 [(validate.rules).string = {email: true}];
  string password = 2 [
    (validate.rules).string = {
      min_len: 6,
      max_len: 100,
      pattern: "^[a-zA-Z0-9!@#\\$%\\^&\\*\\(\\)_\\+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+$"
    }
  ];
}

message RefreshTokenRequest {
  string refresh_token = 1 [(validate.rules).string = {uuid: true}];
}

message GetUserProfileRequest {
  string id = 1 [(validate.rules).string = {uuid: true}];
}

message UpdateProfileRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string email = 2 [(validate.rules).string = {email: true}];
}

message ChangePasswordRequest {
  string old_password = 1 [
    (validate.rules).string = {
      min_len: 6,
      max_len: 100,
      pattern: "^[a-zA-Z0-9!@#\\$%\\^&\\*\\(\\)_\\+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+$"
    }
  ];
  string new_password = 2 [
    (validate.rules).string = {
      min_len: 6,
      max_len: 100,
      pattern: "^[a-zA-Z0-9!@#\\$%\\^&\\*\\(\\)_\\+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+$"
    }
  ];
}

// Responses

message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ClaimsResponse {
  string user_id = 1;
}

message UserResponse {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  optional google.protobuf.Timestamp updated_at = 3;
  bool is_deleted = 4;
  string name = 5;
  string email = 6;
}

// Defaults

message Empty {}

message ErrorDetail {
  string code = 1;
  map<string, string> errors = 2;
}